version: v1alpha1 # Indicates the schema used to decode the contents.
debug: false # Enable verbose logging to the console.
persist: true # Indicates whether to pull the machine config upon every boot.
# Provides machine specific configuration options.
machine:
    type: controlplane # Defines the role of the machine within the cluster.
    token: juvwlk.wig57imr08mnpy6k # The `token` is used by a machine to join the PKI of the cluster.
    # The root certificate authority of the PKI.
    ca:
        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQakNCOGFBREFnRUNBaEFoSkpXVzZDYUlPSUZoTWdWb29MNlhNQVVHQXl0bGNEQVFNUTR3REFZRFZRUUsKRXdWMFlXeHZjekFlRncweU1URXhNVEV5TURBd01USmFGdzB6TVRFeE1Ea3lNREF3TVRKYU1CQXhEakFNQmdOVgpCQW9UQlhSaGJHOXpNQ293QlFZREsyVndBeUVBdC91RzhEZ3JVc2xGRloyeUhCV0V5RjJUSjg1ajg2WEpBTWVvClBwNG1QTStqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVZHppaWduVHZPUnQ2OVVKWQpEWjEvdFVzNDRSQXdCUVlESzJWd0EwRUEwa0hGTEIxNWdUR091OVFodmY1N0lEbldpcmQ3NW91bmR1c254OGhkCnNZUzNjSTVpQlJ4bGpjVmlyQlR5azRhbVMySVgwMHl5SGQ1S3NtYlFHSmt0QlE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
        key: LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0KTUM0Q0FRQXdCUVlESzJWd0JDSUVJQmVKbUNpV3BnYU9JRGdvS052OXFoOTdLRDN0WUFiSTRBc3BQS1hWcW5OSwotLS0tLUVORCBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0K
    # Extra certificate subject alternative names for the machine's certificate.
    certSANs: []
    #   # Uncomment this to enable SANs.
    #   - 10.0.0.10
    #   - 172.16.0.10
    #   - 192.168.0.10

    # Used to provide additional options to the kubelet.
    kubelet: {}
    # # The `image` field is an optional reference to an alternative kubelet image.
    # image: ghcr.io/talos-systems/kubelet:v1.22.3

    # # The `ClusterDNS` field is an optional reference to an alternative kubelet clusterDNS ip list.
    # clusterDNS:
    #     - 10.96.0.10
    #     - 169.254.2.53

    # # The `extraArgs` field is used to provide additional flags to the kubelet.
    # extraArgs:
    #     key: value

    # # The `extraMounts` field is used to add additional mounts to the kubelet container.
    # extraMounts:
    #     - destination: /var/lib/example
    #       type: bind
    #       source: /var/lib/example
    #       options:
    #         - bind
    #         - rshared
    #         - rw

    # # The `nodeIP` field is used to configure `--node-ip` flag for the kubelet.
    # nodeIP:
    #     # The `validSubnets` field configures the networks to pick kubelet node IP from.
    #     validSubnets:
    #         - 10.0.0.0/8
    #         - fdc7::/16

    # Provides machine specific network configuration options.
    network: {}
    # # `interfaces` is used to define the network interface configuration.
    # interfaces:
    #     - interface: eth0 # The interface name.
    #       # Assigns static IP addresses to the interface.
    #       addresses:
    #         - 192.168.2.0/24
    #       # A list of routes associated with the interface.
    #       routes:
    #         - network: 0.0.0.0/0 # The route's network.
    #           gateway: 192.168.2.1 # The route's gateway.
    #           metric: 1024 # The optional metric for the route.
    #       mtu: 1500 # The interface's MTU.
    #       
    #       # # Bond specific options.
    #       # bond:
    #       #     # The interfaces that make up the bond.
    #       #     interfaces:
    #       #         - eth0
    #       #         - eth1
    #       #     mode: 802.3ad # A bond option.
    #       #     lacpRate: fast # A bond option.

    #       # # Indicates if DHCP should be used to configure the interface.
    #       # dhcp: true

    #       # # DHCP specific options.
    #       # dhcpOptions:
    #       #     routeMetric: 1024 # The priority of all routes received via DHCP.

    #       # # Wireguard specific configuration.

    #       # # wireguard server example
    #       # wireguard:
    #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
    #       #     listenPort: 51111 # Specifies a device's listening port.
    #       #     # Specifies a list of peer configurations to apply to a device.
    #       #     peers:
    #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.
    #       #           endpoint: 192.168.1.3 # Specifies the endpoint of this peer entry.
    #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
    #       #           allowedIPs:
    #       #             - 192.168.1.0/24
    #       # # wireguard peer example
    #       # wireguard:
    #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
    #       #     # Specifies a list of peer configurations to apply to a device.
    #       #     peers:
    #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.
    #       #           endpoint: 192.168.1.2 # Specifies the endpoint of this peer entry.
    #       #           persistentKeepaliveInterval: 10s # Specifies the persistent keepalive interval for this peer.
    #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
    #       #           allowedIPs:
    #       #             - 192.168.1.0/24

    #       # # Virtual (shared) IP address configuration.
    #       # vip:
    #       #     ip: 172.16.199.55 # Specifies the IP address to be used.

    # # Used to statically set the nameservers for the machine.
    # nameservers:
    #     - 8.8.8.8
    #     - 1.1.1.1

    # # Allows for extra entries to be added to the `/etc/hosts` file
    # extraHostEntries:
    #     - ip: 192.168.1.100 # The IP of the host.
    #       # The host alias.
    #       aliases:
    #         - example
    #         - example.domain.tld

    # # Configures KubeSpan feature.
    # kubespan:
    #     enabled: true # Enable the KubeSpan feature.

    # Used to provide instructions for installations.
    install:
        disk: /dev/mmcblk0 # The disk used for installations.
        image: ghcr.io/talos-systems/installer:v0.13.2 # Allows for supplying the image used to perform the installation.
        bootloader: true # Indicates if a bootloader should be installed.
        wipe: false # Indicates if the installation disk should be wiped at installation time.
        
        # # Look up disk using disk attributes like model, size, serial and others.
        # diskSelector:
        #     size: 4GB # Disk size.
        #     model: WDC* # Disk model `/sys/block/<dev>/device/model`.

        # # Allows for supplying extra kernel args via the bootloader.
        # extraKernelArgs:
        #     - talos.platform=metal
        #     - reboot=k
    # Features describe individual Talos features that can be switched on or off.
    features:
        rbac: true # Enable role-based access control (RBAC).
    
    # # Used to partition, format and mount additional disks.

    # # MachineDisks list example.
    # disks:
    #     - device: /dev/sdb # The name of the disk to use.
    #       # A list of partitions to create on the disk.
    #       partitions:
    #         - mountpoint: /var/mnt/extra # Where to mount the partition.
    #           
    #           # # The size of partition: either bytes or human readable representation. If `size:` is omitted, the partition is sized to occupy the full disk.

    #           # # Human readable representation.
    #           # size: 100 MB
    #           # # Precise value in bytes.
    #           # size: 1073741824

    # # Allows the addition of user specified files.

    # # MachineFiles usage example.
    # files:
    #     - content: '...' # The contents of the file.
    #       permissions: 0o666 # The file's permissions in octal.
    #       path: /tmp/file.txt # The path of the file.
    #       op: append # The operation to use

    # # The `env` field allows for the addition of environment variables.

    # # Environment variables definition examples.
    # env:
    #     GRPC_GO_LOG_SEVERITY_LEVEL: info
    #     GRPC_GO_LOG_VERBOSITY_LEVEL: "99"
    #     https_proxy: http://SERVER:PORT/
    # env:
    #     GRPC_GO_LOG_SEVERITY_LEVEL: error
    #     https_proxy: https://USERNAME:PASSWORD@SERVER:PORT/
    # env:
    #     https_proxy: http://DOMAIN\USERNAME:PASSWORD@SERVER:PORT/

    # # Used to configure the machine's time settings.

    # # Example configuration for cloudflare ntp server.
    # time:
    #     disabled: false # Indicates if the time service is disabled for the machine.
    #     # Specifies time (NTP) servers to use for setting the system time.
    #     servers:
    #         - time.cloudflare.com
    #     bootTimeout: 2m0s # Specifies the timeout when the node time is considered to be in sync unlocking the boot sequence.

    # # Used to configure the machine's sysctls.

    # # MachineSysctls usage example.
    # sysctls:
    #     kernel.domainname: talos.dev
    #     net.ipv4.ip_forward: "0"

    # # Used to configure the machine's container image registry mirrors.
    # registries:
    #     # Specifies mirror configuration for each registry.
    #     mirrors:
    #         ghcr.io:
    #             # List of endpoints (URLs) for registry mirrors to use.
    #             endpoints:
    #                 - https://registry.insecure
    #                 - https://ghcr.io/v2/
    #     # Specifies TLS & auth configuration for HTTPS image registries.
    #     config:
    #         registry.insecure:
    #             # The TLS configuration for the registry.
    #             tls:
    #                 insecureSkipVerify: true # Skip TLS server certificate verification (not recommended).
    #                 
    #                 # # Enable mutual TLS authentication with the registry.
    #                 # clientIdentity:
    #                 #     crt: TFMwdExTMUNSVWRKVGlCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2sxSlNVSklla05DTUhGLi4u
    #                 #     key: TFMwdExTMUNSVWRKVGlCRlJESTFOVEU1SUZCU1NWWkJWRVVnUzBWWkxTMHRMUzBLVFVNLi4u
    #             
    #             # # The auth configuration for this registry.
    #             # auth:
    #             #     username: username # Optional registry authentication.
    #             #     password: password # Optional registry authentication.

    # # Machine system disk encryption configuration.
    # systemDiskEncryption:
    #     # Ephemeral partition encryption.
    #     ephemeral:
    #         provider: luks2 # Encryption provider to use for the encryption.
    #         # Defines the encryption keys generation and storage method.
    #         keys:
    #             - # Deterministically generated key from the node UUID and PartitionLabel.
    #               nodeID: {}
    #               slot: 0 # Key slot number for LUKS2 encryption.
    #         
    #         # # Cipher kind to use for the encryption. Depends on the encryption provider.
    #         # cipher: aes-xts-plain64

    #         # # Defines the encryption sector size.
    #         # blockSize: 4096

    #         # # Additional --perf parameters for the LUKS2 encryption.
    #         # options:
    #         #     - no_read_workqueue
    #         #     - no_write_workqueue
# Provides cluster specific configuration options.
cluster:
    id: DKswCDE6YzUR6PczzKqxoQdy0FKoSXw0x_NPwUoKzKg= # Globally unique identifier for this cluster.
    secret: kH6mo28ORy4AWyLQzpc68aIfH+fBFM6O19rBaVwq/D4= # Shared secret of cluster.
    # Provides control plane specific configuration options.
    controlPlane:
        endpoint: https://192.168.7.248:6443 # Endpoint is the canonical controlplane endpoint, which can be an IP address or a DNS hostname.
    clusterName: talos01 # Configures the cluster's name.
    # Provides cluster specific network configuration options.
    network:
        dnsDomain: cluster.local # The domain used by Kubernetes DNS.
        # The pod subnet CIDR.
        podSubnets:
            - 10.244.0.0/16
        # The service subnet CIDR.
        serviceSubnets:
            - 10.96.0.0/12
        
        # # The CNI used.
        # cni:
        #     name: custom # Name of CNI to use.
        #     # URLs containing manifests to apply for the CNI.
        #     urls:
        #         - https://raw.githubusercontent.com/cilium/cilium/v1.8/install/kubernetes/quick-install.yaml
    token: 59w9to.zuhece92gv901tyg # The [bootstrap token](https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/) used to join the cluster.
    aescbcEncryptionSecret: uhRWV70VE3PWCPzure3VV6GPli8F466S3F4dlj5vmRQ= # The key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).
    # The base64 encoded root certificate authority used by Kubernetes.
    ca:
        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpekNDQVRDZ0F3SUJBZ0lSQU5kSE8vWTFBSzU0MkxrVFFrUmhNSDR3Q2dZSUtvWkl6ajBFQXdJd0ZURVQKTUJFR0ExVUVDaE1LYTNWaVpYSnVaWFJsY3pBZUZ3MHlNVEV4TVRFeU1EQXdNVEphRncwek1URXhNRGt5TURBdwpNVEphTUJVeEV6QVJCZ05WQkFvVENtdDFZbVZ5Ym1WMFpYTXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CCkJ3TkNBQVJFbUdwTEMva3llZCtvRE45cEFNUUVpbWV0cDU3M25PQ3FYNHZuNXA1RHYrbk15UmdjZHlTWDVqWEQKSUVWZVVtMjdubXJ3aTVSOGUwRjNLeW9BMlRJVG8yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FvUXdIUVlEVlIwbApCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPCkJCWUVGQWlrb1d2RVhoSTlZWjRobWZGRlM1N2NyWElZTUFvR0NDcUdTTTQ5QkFNQ0Ewa0FNRVlDSVFDbTdOVDMKcGYxbVZKOGZvZ2wzZzVxNU54ckMyb3V6SmpVSlpFTWRYNGVZZ0FJaEFMdnQxMkpKdUo0QU9aNVM4elJOanRxLwpJei9xVzlucVF2VkNLWjNFcy8vYQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
        key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUQvNTBMeHNsU2h4N1dlQXB3SFIrWUNhNzRNS0s1aVowRFdVdnd2VVlVc0dvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFUkpocVN3djVNbm5mcUF6ZmFRREVCSXBucmFlZTk1emdxbCtMNSthZVE3L3B6TWtZSEhjawpsK1kxd3lCRlhsSnR1NTVxOEl1VWZIdEJkeXNxQU5reUV3PT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
    # The base64 encoded aggregator certificate authority used by Kubernetes for front-proxy certificate generation.
    aggregatorCA:
        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJYekNDQVFXZ0F3SUJBZ0lRR1A1MkJQd2U4dldsQXYxbUVzeGh6akFLQmdncWhrak9QUVFEQWpBQU1CNFgKRFRJeE1URXhNVEl3TURBeE1sb1hEVE14TVRFd09USXdNREF4TWxvd0FEQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxRwpTTTQ5QXdFSEEwSUFCT1c2VXJHNWVGTFQvSHVnYUlBTXliYytIZnRUWC8yQ01rNXlMWUFLZlJwU3gyY3BuUkkwCkJIR0ZmVThXOFZYWWU1azBFaVcvd3lqUGpCUWsrSUpRQVBhallUQmZNQTRHQTFVZER3RUIvd1FFQXdJQ2hEQWQKQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZApCZ05WSFE0RUZnUVV1amplQjFERkhsQTREelJGTitSSmJJdmc3cXd3Q2dZSUtvWkl6ajBFQXdJRFNBQXdSUUloCkFQckNIeXlNRHdLS1doRldORE8vOFUvYVZET01ocTZrRU1WcnN1QmdPL0kzQWlCWE4zYXU4Qk1jY05POXUvSWcKVUs3UnQvQlBRK0NUUWtiNG1wT1B1UlhCZFE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
        key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSU10bmEvMU4yQ2t6TDJRYllDcm13WFBKWUFmaXZIc05hbm5sa21nNWNjMVVvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFNWJwU3NibDRVdFA4ZTZCb2dBekp0ejRkKzFOZi9ZSXlUbkl0Z0FwOUdsTEhaeW1kRWpRRQpjWVY5VHhieFZkaDdtVFFTSmIvREtNK01GQ1Q0Z2xBQTlnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
    # The base64 encoded private key for service account token generation.
    serviceAccount:
        key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUtXVWFtcUp6R0MvYncyOXlDdkRRQ0JGSWRKQmpXdGthb091bmgyZ0JabVdvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFd0piZnVUYmh3azhaSFgwTEI3OGxlL2lRN0lBd1NzSnppM0JOa1dHc09OWkFranhnbXBsSwp1a09jVlBJeFFKWnFEVkh2emFmK1VtNCtIcnByWXR4Nzl3PT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
    # API server specific configuration options.
    apiServer:
        # Extra certificate subject alternative names for the API server's certificate.
        certSANs:
            - 192.168.7.248
        
        # # The container image used in the API server manifest.
        # image: k8s.gcr.io/kube-apiserver:v1.22.3
    # Controller manager server specific configuration options.
    controllerManager: {}
    # # The container image used in the controller manager manifest.
    # image: k8s.gcr.io/kube-controller-manager:v1.22.3

    # Kube-proxy server-specific configuration options
    proxy: {}
    # # The container image used in the kube-proxy manifest.
    # image: k8s.gcr.io/kube-proxy:v1.22.3

    # Scheduler server specific configuration options.
    scheduler: {}
    # # The container image used in the scheduler manifest.
    # image: k8s.gcr.io/kube-scheduler:v1.22.3

    # Etcd specific configuration options.
    etcd:
        # The `ca` is the root certificate authority of the PKI.
        ca:
            crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJmRENDQVNPZ0F3SUJBZ0lRRzdmTTV3TDBYRkxGazI5RUtHNlQxVEFLQmdncWhrak9QUVFEQWpBUE1RMHcKQ3dZRFZRUUtFd1JsZEdOa01CNFhEVEl4TVRFeE1USXdNREF4TWxvWERUTXhNVEV3T1RJd01EQXhNbG93RHpFTgpNQXNHQTFVRUNoTUVaWFJqWkRCWk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMElBQklvS1pXejdRcGt1Ci9PcUxFM0xPcnMxNWxZUy9Ud2lvTGxTZStrL0pJR05ZSnY0YmIvRkEyc3A1OW1KNThmQ3F4MTlzdndidllPYmwKbkVIMEVOWm5QNTJqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjRApBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVdnBWMWZIZjhFSHowCjFLYldvYXl0cmFmYkNQWXdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdRODJCZUVaVG5jcGcvKzk4MnIxLytwUU4KZ0JvaWdDd3gvbTNhMXRPUnBKRUNJQ044OVl2R2VrZ3doZnJLWWlEeGRuKy9uL2F4dFBrREJxbWNEUjV0blkxQQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
            key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUFLMTU0R1E0ZWVjZXVhQ2JRTHkwZmlXQ2I4SlpFM244Q2lFcGQ5TjBrYUJvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFaWdwbGJQdENtUzc4Nm9zVGNzNnV6WG1WaEw5UENLZ3VWSjc2VDhrZ1kxZ20vaHR2OFVEYQp5bm4yWW5ueDhLckhYMnkvQnU5ZzV1V2NRZlFRMW1jL25RPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
        
        # # The container image used to create the etcd service.
        # image: gcr.io/etcd-development/etcd:v3.4.16

        # # The subnet from which the advertise URL should be.
        # subnet: 10.0.0.0/8
    # A list of urls that point to additional manifests.
    extraManifests: []
    #   - https://www.example.com/manifest1.yaml
    #   - https://www.example.com/manifest2.yaml

    # A list of inline Kubernetes manifests.
    inlineManifests: []
    #   - name: namespace-ci # Name of the manifest.
    #     contents: |- # Manifest contents as a string.
    #       apiVersion: v1
    #       kind: Namespace
    #       metadata:
    #       	name: ci

    
    # # Configures cluster member discovery.
    # discovery:
    #     enabled: true # Enable the cluster membership discovery feature.
    #     # Configure registries used for cluster member discovery.
    #     registries:
    #         # Kubernetes registry uses Kubernetes API server to discover cluster members and stores additional information
    #         kubernetes: {}
    #         # Service registry is using an external service to push and pull information about cluster members.
    #         service:
    #             endpoint: https://discovery.talos.dev/ # External service endpoint.

    # # Core DNS specific configuration options.
    # coreDNS:
    #     image: docker.io/coredns/coredns:1.8.4 # The `image` field is an override to the default coredns image.

    # # External cloud provider configuration.
    # externalCloudProvider:
    #     enabled: true # Enable external cloud provider.
    #     # A list of urls that point to additional manifests for an external cloud provider.
    #     manifests:
    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/rbac.yaml
    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/aws-cloud-controller-manager-daemonset.yaml

    # # A map of key value pairs that will be added while fetching the extraManifests.
    # extraManifestHeaders:
    #     Token: "1234567"
    #     X-ExtraInfo: info

    # # Settings for admin kubeconfig generation.
    # adminKubeconfig:
    #     certLifetime: 1h0m0s # Admin kubeconfig certificate lifetime (default is 1 year).
